// <auto-generated />
using Job_candidate_hub_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Job_candidate_hub_API.Migrations
{
    [DbContext(typeof(CandidateHubDBContext))]
    partial class CandidateHubDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Job_candidate_hub_API.Models.Candidate", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitHubProfileURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInProfileURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeInterval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Email = "moustafafouda17@gmail.com",
                            FirstName = "Mustafa",
                            FreeTextComment = "I am a Software Engineer at Network International",
                            GitHubProfileURL = "github.com/MustafaFouda10",
                            LastName = "Fouda",
                            LinkedInProfileURL = "linkedin.com/in/mustafa-fouda-/",
                            PhoneNumber = "+201206670459",
                            TimeInterval = "1 hour"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
